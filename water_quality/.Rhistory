install.packages('devtools')
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
quit()
IRkernel::installspec()
quit()
# Load packages such as ggplot2, dplyr, tidyr, and readr to be able to use specialised functions for creating
# visualisations, reading, writing, and manipulating data.
library(tidyverse)
write_csv(new_rivernitrogen, "rivernitro.csv")
# Takes the river_nitrogen data frame then rename the columns, select the necessary rows, group them
# by Region, Indicator, and Year. Lastly, summarise them by getting the sum of the median values rounded
# off by 2 s.f.
new_rivernitrogen <- river_nitrogen %>%
rename(Region = state, Indicator = measure, Units = units, Med_Value = median,
Year = end_year) %>%
filter(Indicator %in% c("Ammoniacal nitrogen", "Nitrate-nitrite nitrogen"),
Year >= 2002, Year <= 2019) %>%
group_by(Region, Indicator, Year) %>%
summarise(Total_MedVal = round(sum(Med_Value), 2), Units) %>%
distinct()
river_nitrogen <- "new_river_nitrogen.csv" %>%
read_csv()
setwd("~/data201_gp/water_quality")
setwd("~/data201_gp/water_quality")
river_nitrogen <- "new_river_nitrogen.csv" %>%
read_csv()
# Gives an overview of river_nitrogen such as columns, data types, the possible values, number of rows and columns.
# This allow us to select which relevant columns to select.
river_nitrogen %>%
glimpse()
# Select the relevant columns for analysis.
river_nitrogen <- river_nitrogen %>%
select(measure, units, median, end_year, state)
# The following lines of code show the entirety of the summary statistics of the whole river_nitrogen.
# The skim() provides a detailed overview of the dataframe.
# The select() choose the columns specified.
# The kable() creates and presents the overview of the dataframe in a table format.
river_nitrogen %>%
skim() %>%
select(1:7) %>%
kable()
# Load the readxl package to be able to use a function to read Excel files.
library(readxl)
# Load skimr package to be able to use a function to understand the structure of the dataframe we will analyse
library(skimr)
# Load the knitr package to be able to use a function for presenting information in a tidy format.
library(knitr)
# Load the visdat
library(visdat)
river_nitrogen <- "new_river_nitrogen.csv" %>%
read_csv()
# Gives an overview of river_nitrogen such as columns, data types, the possible values, number of rows and columns.
# This allow us to select which relevant columns to select.
river_nitrogen %>%
glimpse()
# Select the relevant columns for analysis.
river_nitrogen <- river_nitrogen %>%
select(measure, units, median, end_year, state)
# The following lines of code show the entirety of the summary statistics of the whole river_nitrogen.
# The skim() provides a detailed overview of the dataframe.
# The select() choose the columns specified.
# The kable() creates and presents the overview of the dataframe in a table format.
river_nitrogen %>%
skim() %>%
select(1:7) %>%
kable()
river_nitrogen %>%
skim() %>%
select(8:14) %>%
kable()
# Reads the entirety of river_nitrogen and creates a plot to check if it contains missing data (NA).
river_nitrogen %>%
vis_miss()
# Takes the river_nitrogen data frame then rename the columns, select the necessary rows, group them
# by Region, Indicator, and Year. Lastly, summarise them by getting the sum of the median values rounded
# off by 2 s.f.
new_rivernitrogen <- river_nitrogen %>%
rename(Region = state, Indicator = measure, Units = units, Med_Value = median,
Year = end_year) %>%
filter(Indicator %in% c("Ammoniacal nitrogen", "Nitrate-nitrite nitrogen"),
Year >= 2002, Year <= 2019) %>%
group_by(Region, Indicator, Year) %>%
summarise(Total_MedVal = round(sum(Med_Value), 2), Units) %>%
distinct()
# Takes the new_rivernitrogen then convert it to wide format.
rivernitrogen_wide <- new_rivernitrogen %>%
spread(key = Indicator,
value = Total_MedVal)
rivernitrogen_wide
write_csv(new_rivernitrogen, "rivernitro.csv")
library(lubridate)
# Load the tidygeocoder package to be able to use a function to convert the given latitude and longitude
# to address.
library(tidygeocoder)
groundwq <- "groundwq_2004-2020.xlsx" %>%
read_excel()
# Gives an overview of groundwq such as columns, data types, the possible values, number of rows and columns.
groundwq %>%
glimpse()
# The following lines of code show the entirety of the summary statistics of the whole groundwq.
# The skim() provides a detailed overview of the dataframe.
# The select() choose the columns specified.
# The kable() creates and presents the overview of the dataframe in a table format.
groundwq %>%
skim() %>%
select(1:7) %>%
kable()
groundwq %>%
skim() %>%
select(8:14) %>%
kable()
groundwq %>%
skim() %>%
select(15:21) %>%
kable()
# Reads the entirety of groundwq and creates a plot to check if it contains missing data (NA).
groundwq %>%
vis_miss(warn_large_data = FALSE)
# Takes the groundwq modify CensoredValue and create a new variable called Year, select the relevant columns
# and rows, group the rows by Region, Indicator, and Year then create an new data frame containing the sum of
# the CensoredValue rounded off to 2.
new_groundwq <- groundwq %>%
mutate(CensoredValue = ifelse(is.na(CensoredValue), NA_integer_, CensoredValue),
Year = year(Date)) %>%
select(Region, Indicator, Units, Year, CensoredValue) %>%
filter(Indicator %in% c("E.coli", "Nitrate nitrogen"), Year >= 2002, Year <= 2019) %>%
group_by(Region, Indicator, Year) %>%
summarise(Value = round(sum(CensoredValue), 2), Units) %>%
distinct()
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Indicator,
value = Value)
groundwq_wide
write_csv(new_groundwq, "groundwq.csv")
return(data)
change_unit <- function(data){
if (select(x, contains("g/m"))) {
x = "g/m3"
}
return(data)
}
new_groundwq %>%
change_unit()
change_unit <- function(data, colname){
if (select(data$colname, contains("g/m"))) {
x = "g/m3"
}
return(data)
}
new_groundwq %>%
change_unit()
change_unit <- function(data, colname){
if (str_contains(data$colname, contains("g/m"))) {
x = "g/m3"
}
return(data)
}
new_groundwq %>%
change_unit()
# Takes the groundwq modify CensoredValue and create a new variable called Year, select the relevant columns
# and rows, group the rows by Region, Indicator, and Year then create an new data frame containing the sum of
# the CensoredValue rounded off to 2.
new_groundwq <- groundwq %>%
mutate(CensoredValue = ifelse(is.na(CensoredValue), NA_integer_, CensoredValue),
Year = year(Date),
Units = case_when(Indicator == "E.coli" ~ "cfu/100ml", TRUE ~ "g/m3")) %>%
select(Region, Indicator, Units, Year, CensoredValue) %>%
filter(Indicator %in% c("E.coli", "Nitrate nitrogen"), Year >= 2002, Year <= 2019) %>%
group_by(Region, Indicator, Year) %>%
summarise(Value = round(sum(CensoredValue), 2), Units) %>%
distinct()
View(new_groundwq)
rivernitrogen_wide %>%
glimpse()
# Takes the new_rivernitrogen then convert it to wide format.
rivernitrogen_wide <- new_rivernitrogen %>%
spread(key = Indicator,
value = Total_MedVal) %>%
select(Regio, Year, `Ammoniacal nitrogen`, `Nitrate-nitrite nitrogen`)
# Takes the new_rivernitrogen then convert it to wide format.
rivernitrogen_wide <- new_rivernitrogen %>%
spread(key = Indicator,
value = Total_MedVal) %>%
select(Regio, Year, `Ammoniacal nitrogen`, `Nitrate-nitrite nitrogen`)
# Takes the new_rivernitrogen then convert it to wide format.
rivernitrogen_wide <- new_rivernitrogen %>%
spread(key = Indicator,
value = Total_MedVal) %>%
select(Region, Year, `Ammoniacal nitrogen`, `Nitrate-nitrite nitrogen`)
rivernitrogen_wide
View(rivernitrogen_wide)
# Takes the new_rivernitrogen then convert it to wide format.
rivernitrogen_wide <- new_rivernitrogen %>%
spread(key = Indicator,
value = Total_MedVal)
rivernitrogen_wide
rivernitrogen_wide %>%
select(Region, Year, `Ammoniacal nitrogen`, `Nitrate-nitrite nitrogen`)
rivernitrogen_wide
# Takes the groundwq modify CensoredValue and create a new variable called Year, select the relevant columns
# and rows, group the rows by Region, Indicator, and Year then create an new data frame containing the sum of
# the CensoredValue rounded off to 2.
new_groundwq <- groundwq %>%
mutate(CensoredValue = ifelse(is.na(CensoredValue), NA_integer_, CensoredValue),
Year = year(Date),
Units = case_when(Indicator == "E.coli" ~ "cfu/100ml", TRUE ~ "g/m3")) %>%
select(Region, Indicator, Units, Year, CensoredValue) %>%
filter(Indicator %in% c("E.coli", "Nitrate nitrogen"), Year >= 2002, Year <= 2019) %>%
group_by(Region, Indicator, Year) %>%
summarise(Value = round(sum(CensoredValue), 2), Units) %>%
distinct()
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Indicator,
value = Value)
groundwq_wide
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = c(Indicator, Units),
value = Value)
groundwq_wide
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Indicator,
value = Value)
groundwq_wide
# Takes the groundwq modify CensoredValue and create a new variable called Year, select the relevant columns
# and rows, group the rows by Region, Indicator, and Year then create an new data frame containing the sum of
# the CensoredValue rounded off to 2.
new_groundwq <- groundwq %>%
mutate(CensoredValue = ifelse(is.na(CensoredValue), NA_integer_, CensoredValue),
Year = year(Date),
Units = case_when(Indicator == "E.coli" ~ "cfu/100ml", TRUE ~ "g/m3")) %>%
select(Region, Indicator, Units, Year, CensoredValue) %>%
filter(Indicator %in% c("E.coli", "Nitrate nitrogen"), Year >= 2002, Year <= 2019) %>%
group_by(Region, Indicator, Year) %>%
summarise(Value = round(sum(CensoredValue), 2)) %>%
distinct()
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Indicator,
value = Value)
groundwq_wide
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Indicator,
value = c(Value, Units))
groundwq_wide
# Takes the groundwq modify CensoredValue and create a new variable called Year, select the relevant columns
# and rows, group the rows by Region, Indicator, and Year then create an new data frame containing the sum of
# the CensoredValue rounded off to 2.
new_groundwq <- groundwq %>%
mutate(CensoredValue = ifelse(is.na(CensoredValue), NA_integer_, CensoredValue),
Year = year(Date),
Units = case_when(Indicator == "E.coli" ~ "cfu/100ml", TRUE ~ "g/m3")) %>%
select(Region, Indicator, Units, Year, CensoredValue) %>%
filter(Indicator %in% c("E.coli", "Nitrate nitrogen"), Year >= 2002, Year <= 2019) %>%
group_by(Region, Indicator, Year) %>%
summarise(Value = round(sum(CensoredValue), 2), Units) %>%
distinct()
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Indicator,
value = c(Value, Units))
groundwq_wide
value = c(Value)
write_csv(new_groundwq, "groundwq.csv")
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Indicator,
value = Value)
groundwq_wide
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Region,
value = Value)
groundwq_wide
View(groundwq_wide)
# Takes the new_rivernitrogen then convert it to wide format.
rivernitrogen_wide <- new_rivernitrogen %>%
spread(key = Region,
value = Total_MedVal)
rivernitrogen_wide
# Takes the new_rivernitrogen then convert it to wide format.
rivernitrogen_wide <- new_rivernitrogen %>%
spread(key = Indicator,
value = Total_MedVal)
rivernitrogen_wide
# Takes the new_rivernitrogen then convert it to wide format.
rivernitrogen_wide <- new_rivernitrogen %>%
spread(key = Region,
value = Total_MedVal)
rivernitrogen_wide
# Takes the new_rivernitrogen then convert it to wide format.
rivernitrogen_wide <- new_rivernitrogen %>%
spread(key = Indicator,
value = Total_MedVal)
rivernitrogen_wide
rivernitrogen_wide %>%
summarise(n = is.na())
rivernitrogen_wide %>%
summarise(n = sum(is.na()))
rivernitrogen_wide %>%
summarise(n = sum(is.na(`Ammoniacal nitrogen`)), n1 = sum(is.na(`Nitrate-nitrite nitrogen`)))
sumthing <- rivernitrogen_wide %>%
group_by(Region, Year)
View(sumthing)
summarise(n = sum(is.na(`Ammoniacal nitrogen`)), n1 = sum(is.na(`Nitrate-nitrite nitrogen`)))
sumthing <- rivernitrogen_wide %>%
group_by(Region, Year, `Ammoniacal nitrogen`, `Nitrate-nitrite nitrogen`) %>%
summarise(n = sum(is.na(`Ammoniacal nitrogen`)), n1 = sum(is.na(`Nitrate-nitrite nitrogen`)))
View(sumthing)
# Takes the new_rivernitrogen then convert it to wide format.
rivernitrogen_wide <- new_rivernitrogen %>%
spread(key = Indicator,
value = Total_MedVal)
rivernitrogen_wide
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Indicator,
value = Value)
groundwq_wide
View(groundwq_wide)
View(groundwq_wide)
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Region,
value = Value)
groundwq_wide
Indicator
Region
# Takes the new_groundwq then convert it to wide format.
groundwq_wide <- new_groundwq %>%
spread(key = Region,
value = Value)
groundwq_wide
